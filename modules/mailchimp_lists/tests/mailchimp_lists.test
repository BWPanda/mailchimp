<?php
/**
 * Tests the functionality of the Mailchimp Lists module.
 */

define('MC_TEST_EMAIL_1', 'test1@example.com');
define('MC_TEST_EMAIL_2', 'test2@example.com');
define('MC_TEST_EMAIL_3', 'test3@example.com');

class MailchimpListsBasicTestCase extends DrupalWebTestCase {
  protected $privileged_user;

  public static function getInfo() {
    // Note: getInfo() strings are not translated with t().
    return array(
      'name' => 'Mailchimp Lists',
      'description' => 'Test List Subscription Logic.',
      'group' => 'Mailchimp',
    );
  }

  /**
   * @return bool|void
   */
  public function setUp() {
    // Use a profile that contains required modules:
    $prof = drupal_get_profile();
    $this->profile = $prof;
    // Enable any modules required for the test. This should be an array of
    // module names.
    $enabled_modules = array(
      'libraries',
      'mailchimp',
      'entity',
      'entity_token',
      'mailchimp_lists',
    );
    parent::setUp($enabled_modules);
    variable_set('mailchimp_api_key', 'mailchimp_testing_mode');
    // Create some users with different roles/permissions:
    $this->authorized_user = $this->drupalCreateUser(array());
    // Create some lists:
    $lists = array();

    $list = new stdClass();
    $list->label = 'Anonymous Test List';
    $list->name = 'anonymous_test_list';
    $list->description = 'Anonymous list description';
    $list->list_type = 'freeform';
    $list->mc_list_id = 'test_list_A';
    $list->settings = array(
      'roles' => array(DRUPAL_AUTHENTICATED_RID => DRUPAL_AUTHENTICATED_RID, DRUPAL_ANONYMOUS_RID => DRUPAL_ANONYMOUS_RID),
      'mergefields' => array('EMAIL'),
      'cron' => FALSE,
      'doublein' => FALSE,
      'include_interest_groups' => FALSE,
    );
    $lists[] = $list;

    $list = new stdClass();
    $list->label = 'Optional Test List';
    $list->name = 'optional_test_list';
    $list->description = 'Optional list description';
    $list->list_type = 'optional';
    $list->mc_list_id = 'test_list_B';
    $list->settings = array(
      'roles' => array(DRUPAL_AUTHENTICATED_RID => DRUPAL_AUTHENTICATED_RID),
      'mergefields' => array(''),
      'cron' => FALSE,
      'show_account_form' => TRUE,
      'doublein' => FALSE,
      'include_interest_groups' => FALSE,
    );
    $lists[] = $list;

    $list = new stdClass();
    $list->label = 'Required Test List';
    $list->name = 'required_test_list';
    $list->description = 'Required list description';
    $list->list_type = 'required';
    $list->mc_list_id = 'test_list_C';
    $list->settings = array(
      'roles' => array(DRUPAL_AUTHENTICATED_RID => DRUPAL_AUTHENTICATED_RID),
      'mergefields' => array(),
      'cron' => FALSE,
      'doublein' => FALSE,
      'include_interest_groups' => FALSE,
    );
    $lists[] = $list;

    foreach ($lists as $list) {
      mailchimp_lists_save($list);
    }
  }

  /**
   * Tests subscription to a mailchimp list from an anonymous user.
   */
  public function testMailchimpListSubscriptionWorkflow() {
    // *************************************************************************
    // 1. Test submission of an anonymous signup form for a Freeform list.
    // *************************************************************************
    $form_edit = array();
    $form_edit['mailchimp_lists[mailchimp_anonymous_test_list][mergevars][EMAIL]'] = MC_TEST_EMAIL_1;

    $this->drupalPost('mailchimp/subscribe', $form_edit, t('Subscribe'));
    $this->assertResponse(200, 'Anonymous subscription allowed.');

    $successful_subscription = mailchimp_is_subscribed('test_list_A', MC_TEST_EMAIL_1);

    $message = $successful_subscription ? "successful." : "failed.";
    $this->assertTrue($successful_subscription, 'Anonymous subscription ' . $message, 'Subscriptions: Anonymous');

    // *************************************************************************
    // 2. Test submission of a signup form from an Authenticated User
    // to an Optional List.
    // *************************************************************************
    $this->drupalLogin($this->authorized_user);
    $id = $this->authorized_user->uid;
    $email = $this->authorized_user->mail;
    $form_edit = array();
    $form_edit['mailchimp_lists[mailchimp_optional_test_list][subscribe]'] = TRUE;
    $this->drupalPost('user/' . $id . "/mailchimp", $form_edit, t('Save'));
    $this->assertResponse(200, 'Authenticated subscription to optional list allowed.');
    $successful_subscription = mailchimp_is_subscribed('test_list_B', $email);
    $message = $successful_subscription ? "successful." : "failed.";
    $this->assertTrue($successful_subscription, 'Authenticated user subscription ' . $message, 'Subscriptions: Optional');
    // *************************************************************************
    // 3. Test deletion of an Authenticated User removes the user from optional
    // list.
    // *************************************************************************
    user_delete($id);
    $is_subscribed = mailchimp_is_subscribed('test_list_B', $email);
    $message = $is_subscribed ? "subscribed." : "not subscribed.";
    $this->assertFalse($is_subscribed, "Authenticated user's email status after account deletion: " . $message, 'Subscriptions: Optional');
    // *************************************************************************
    // 4. Test if hooks for user creation are properly adding a new User to a
    // Required list.
    // *************************************************************************
    $is_subscribed = mailchimp_is_subscribed('test_list_C', MC_TEST_EMAIL_2);
    $message = $is_subscribed ? "subscribed." : "not subscribed.";
    // Confirm this email address isn't already subscribed:
    $this->assertFalse($is_subscribed, 'Email address initial status on Required List: ' . $message, 'Subscriptions: Required');
    // Create a user with the authenticated role (required by required list).
    $edit = array(
      'name' => "Test Authenticated User",
      'mail' => MC_TEST_EMAIL_2,
      'pass' => "test",
      'status' => 1,
      'roles' => array(DRUPAL_AUTHENTICATED_RID => DRUPAL_AUTHENTICATED_RID),
    );
    // This should trigger the hook that subscribes this user:
    $account = user_save(drupal_anonymous_user(), $edit);
    $is_subscribed = mailchimp_is_subscribed('test_list_C', $account->mail);
    $message = $is_subscribed ? "subscribed." : "not subscribed.";
    $this->assertTrue($is_subscribed, 'Email address status on Required List after user creation: ' . $message, 'Subscriptions: Required');
    // *************************************************************************
    // 5. Test deletion of an Authenticated User removes the user from required
    // list.
    // *************************************************************************
    $email = $account->mail;
    $id = $account->id;
    user_delete($id);
    $is_subscribed = mailchimp_is_subscribed('test_list_C', $email);
    $message = $is_subscribed ? "subscribed." : "not subscribed.";
    $this->assertFalse($is_subscribed, "Authenticated user's email status after account deletion: " . $message, 'Subscriptions: Required');

    return TRUE;
  }
}
