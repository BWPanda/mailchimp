<?php
/**
 * @file
 * Test class and methods for the Mailchimp Lists module.
 */

class MailchimpListsTestCase extends DrupalWebTestCase {

  /**
   * Returns info displayed in the test interface.
   *
   * @return array
   *   Formatted as specified by simpletest.
   */
  public static function getInfo() {
    // Note: getInfo() strings are not translated with t().
    return array(
      'name' => 'Mailchimp Lists',
      'description' => 'Test List Subscription Logic.',
      'group' => 'MailChimp',
    );
  }

  /**
   * Pre-test setup function.
   *
   * Enables dependencies.
   * Sets the mailchimp_api_key to the test-mode key.
   */
  public function setUp() {
    // Use a profile that contains required modules:
    $prof = drupal_get_profile();
    $this->profile = $prof;
    // Enable modules required for the test.
    $enabled_modules = array(
      'libraries',
      'mailchimp',
      'entity',
      'entity_token',
      'mailchimp_lists',
    );
    parent::setUp($enabled_modules);
    variable_set('mailchimp_api_classname', 'MailChimpTest');

    variable_set('mailchimp_api_key', 'MAILCHIMP_TEST_API_KEY');

    // Create some users with different roles/permissions.
    $this->authorized_user = $this->drupalCreateUser(array());
  }

  /**
   * Tests retrieval of a specific list.
   */
  public function testListRetrieval() {
    $list = mailchimp_get_list('mailchimp_test_list_a');

    $this->assertEqual($list['id'], 'mailchimp_test_list_a', 'Tested list retrieval.');
  }

  /**
   * Tests retrieval of a specific set of lists.
   */
  public function testMultiListRetrieval() {

    $list_ids = array(
      'mailchimp_test_list_a',
      'mailchimp_test_list_b',
    );

    $lists = mailchimp_get_lists($list_ids);

    $this->assertEqual(count($lists), 2, 'Tested correct list count on retrieval.');

    foreach ($list_ids as $list_id) {
      $this->assertEqual((isset($lists[$list_id])), true, 'Tested valid list ID retrieved: ' . $list_id);
      unset($lists[$list_id]);
    }

    $this->assertEqual(count($lists), 0, 'Tested all lists retrieved.');
  }

  /**
   * Tests list subscription.
   */
  public function testSubscription() {

  }

  /**
   * Helper function to generate a random email address.
   *
   * @return string
   *   approximate email format
   */
  protected function randomEmail() {
    return $this->randomName() . "@" . $this->randomName() . ".net";
  }
}